/*
 * Autogenerated by the Meson build system.
 * Do not edit, your changes will be lost.
 */

#pragma once

#define CONFIGURATION "meson build -Dprefix=E:/tools/msys2/mingw64/build_x64"

#define DEFAULT_CDROM_DEVICE "D:"

#define DEFAULT_DVD_DEVICE "D:"

#define FULLCONFIG "build-date cplayer cuda-hwaccel cuda-interop d3d-hwaccel d3d9-hwaccel debug direct3d dos-paths ffnvcodec gl gl-dxinterop gl-dxinterop-d3d9 gl-win32 glob glob-win32 gpl iconv libass libavdevice libbluray libffmpeg libm libmpv-shared noexecstack optimize plain-gl stdatomic threads vector wasapi win32 win32-desktop win32-executable win32-internal-pthreads zlib"

#define HAVE_ALSA 0

#define HAVE_ANDROID 0

#define HAVE_AUDIOUNIT 0

#define HAVE_BSD_FSTATFS 0

#define HAVE_BSD_THREAD_NAME 0

#define HAVE_BUILD_DATE 1

#define HAVE_CDDA 0

#define HAVE_COCOA 0

#define HAVE_CONSIO_H 0

#define HAVE_COREAUDIO 0

#define HAVE_CPLAYER 1

#define HAVE_CPLUGINS 0

#define HAVE_CUDA_HWACCEL 0

#define HAVE_CUDA_INTEROP 0

#define HAVE_D3D11 0

#define HAVE_D3D9_HWACCEL 1

#define HAVE_D3D_HWACCEL 0

#define HAVE_DEBUG 1

#define HAVE_DIRECT3D 1

#define HAVE_DMABUF_INTEROP_GL 0

#define HAVE_DMABUF_INTEROP_PL 0

#define HAVE_DOS_PATHS 1

#define HAVE_DRM 0

#define HAVE_DRM_IS_KMS 0

#define HAVE_DVBIN 0

#define HAVE_DVDNAV 0

#define HAVE_EGL 0

#define HAVE_EGL_ANDROID 0

#define HAVE_EGL_ANGLE 0

#define HAVE_EGL_ANGLE_LIB 0

#define HAVE_EGL_ANGLE_WIN32 0

#define HAVE_EGL_DRM 0

#define HAVE_EGL_HELPERS 0

#define HAVE_EGL_X11 0

#define HAVE_FFNVCODEC 1

#define HAVE_GBM 0

#define HAVE_GL 0

#define HAVE_GLIBC_THREAD_NAME 0

#define HAVE_GLOB 1

#define HAVE_GLOB_POSIX 0

#define HAVE_GLOB_WIN32 1

#define HAVE_GL_COCOA 0

#define HAVE_GL_DXINTEROP 1

#define HAVE_GL_DXINTEROP_D3D9 1

#define HAVE_GL_WAYLAND 0

#define HAVE_GL_WIN32 1

#define HAVE_GL_X11 0

#define HAVE_GPL 1

#define HAVE_HTML_BUILD 0

#define HAVE_ICONV 0

#define HAVE_IOS_GL 0

#define HAVE_JACK 0

#define HAVE_JAVASCRIPT 0

#define HAVE_JPEG 0

#define HAVE_LCMS2 0

#define HAVE_LIBASS 1

#define HAVE_LIBAVDEVICE 0

#define HAVE_LIBBLURAY 0

#define HAVE_LIBDL 0

#define HAVE_LIBFFMPEG 1

#define HAVE_LIBM 1

#define HAVE_LIBMPV_SHARED 1

#define HAVE_LIBPLACEBO 0

#define HAVE_LIBPLACEBO_NEXT 0

#define HAVE_LIBRT 0

#define HAVE_LINUX_FSTATFS 0

#define HAVE_LUA 0

#define HAVE_MACOS_COCOA_CB 0

#define HAVE_MACOS_MEDIA_PLAYER 0

#define HAVE_MACOS_TOUCHBAR 0

#define HAVE_MANPAGE_BUILD 0

#define HAVE_MEMFD_CREATE 0

#define HAVE_NOEXECSTACK 1

#define HAVE_OPENAL 0

#define HAVE_OPENSLES 0

#define HAVE_OPTIMIZE 1

#define HAVE_OSS_AUDIO 0

#define HAVE_OSX_THREAD_NAME 0

#define HAVE_PDF_BUILD 0

#define HAVE_PIPEWIRE 0

#define HAVE_PLAIN_GL 1

#define HAVE_POSIX 0

#define HAVE_PTHREAD_DEBUG 0

#define HAVE_PULSE 0

#define HAVE_RPI 0

#define HAVE_RPI_MMAL 0

#define HAVE_RUBBERBAND 0

#define HAVE_RUBBERBAND_3 0

#define HAVE_SDL2 0

#define HAVE_SDL2_AUDIO 0

#define HAVE_SDL2_GAMEPAD 0

#define HAVE_SDL2_VIDEO 0

#define HAVE_SHADERC 0

#define HAVE_SIXEL 0

#define HAVE_SNDIO 0

#define HAVE_SPIRV_CROSS 0

#define HAVE_STDATOMIC 1

#define HAVE_TA_LEAK_REPORT 0

#define HAVE_TESTS 0

#define HAVE_THREADS 1

#define HAVE_UCHARDET 0

#define HAVE_UWP 0

#define HAVE_VAAPI 0

#define HAVE_VAAPI_DRM 0

#define HAVE_VAAPI_EGL 0

#define HAVE_VAAPI_LIBPLACEBO 0

#define HAVE_VAAPI_WAYLAND 0

#define HAVE_VAAPI_WAYLAND_MEMFD 0

#define HAVE_VAAPI_X11 0

#define HAVE_VAAPI_X_EGL 0

#define HAVE_VAPOURSYNTH 0

#define HAVE_VDPAU 0

#define HAVE_VDPAU_GL_X11 0

#define HAVE_VECTOR !_MSC_VER

#define HAVE_VIDEOTOOLBOX_GL 0

#define HAVE_VT_H 0

#define HAVE_VULKAN 0

#define HAVE_WASAPI 1

#define HAVE_WAYLAND 0

#define HAVE_WIN32 1

#define HAVE_WIN32_DESKTOP 1

#define HAVE_WIN32_EXECUTABLE 1

#define HAVE_WIN32_INTERNAL_PTHREADS 1

#define HAVE_X11 0

#define HAVE_XV 0

#define HAVE_ZIMG 0

#define HAVE_ZLIB 0

#define MPV_CONFDIR "etc/mpv"

#ifndef M_PI_2
#define M_PI_2     1.57079632679489661923
#endif

#ifndef PI
#define PI         3.14159265358979
#endif

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif


#include <unistd.h>

#ifdef  _MSC_VER
#include <Windows.h>
#include <winsock2.h>
#include <time.h>
#include <strings.h>

// 模拟 POSIX 的 gettimeofday 结构（tv_sec：秒，tv_usec：微秒）
//struct timeval {
//    long tv_sec;   // 自 1970-01-01 00:00:00 UTC 以来的秒数
//    long tv_usec;  // 微秒部分（0 ~ 999999）
//};

// Windows 下的 gettimeofday 实现
static int gettimeofday(struct timeval* tp, void* tzp) {
    // 忽略 tzp（Windows 不使用时区参数，POSIX 中可用于时区，此处兼容）
    (void)tzp;

    // 1. 获取系统性能计数器的频率（每秒的计数次数，固定值，只需获取一次）
    static LARGE_INTEGER freq = { 0 };
    if (freq.QuadPart == 0) {
        if (!QueryPerformanceFrequency(&freq)) {
            return -1;  // 获取频率失败（极少数情况，如硬件不支持）
        }
    }

    // 2. 获取当前性能计数器的计数值
    LARGE_INTEGER now;
    if (!QueryPerformanceCounter(&now)) {
        return -1;  // 获取计数值失败
    }

    // 3. 计算总微秒数（计数值 / 频率 = 秒数，转换为微秒需 ×1e6）
    double total_us = (double)now.QuadPart * 1e6 / freq.QuadPart;

    // 4. 拆分秒和微秒（tv_sec 取整数部分，tv_usec 取小数部分×1e6）
    tp->tv_sec = (long)(total_us / 1e6);
    tp->tv_usec = (long)(total_us - tp->tv_sec * 1e6);

    // 注意：QPC 计数值的起点是系统启动时间，需转换为 UTC 时间（1970-01-01 基准）
    // 补充：获取系统启动到 1970-01-01 的时间差（单位：秒）
    FILETIME ft;
    SYSTEMTIME st;
    ULARGE_INTEGER uli;

    // 获取当前系统时间（UTC 时间，非本地时间）
    GetSystemTime(&st);
    SystemTimeToFileTime(&st, &ft);
    uli.LowPart = ft.dwLowDateTime;
    uli.HighPart = ft.dwHighDateTime;

    // Windows FILETIME 基准是 1601-01-01，需减去到 1970-01-01 的差值（11644473600 秒）
    tp->tv_sec = (long)(uli.QuadPart / 10000000 - 11644473600LL);
    // 微秒部分：FILETIME 单位是 100 纳秒，转换为微秒需 ×0.1
    tp->tv_usec = (long)((uli.QuadPart % 10000000) / 10);

    return 0;  // 成功
}


static void get_realtime(struct timespec* out_ts)
{
#if defined(_POSIX_TIMERS) && _POSIX_TIMERS > 0
    clock_gettime(CLOCK_REALTIME, out_ts);
#else
    // OSX
    struct timeval tv;
    gettimeofday(&tv, NULL);
    out_ts->tv_sec = tv.tv_sec;
    out_ts->tv_nsec = tv.tv_usec * 1000UL;
#endif
}

typedef struct {
    unsigned long long low;
    unsigned long long high;
} __uint128_t;


#endif // ! _MSC_VER
